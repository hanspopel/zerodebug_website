{"ast":null,"code":"import _classCallCheck from\"/Projects/new_website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Projects/new_website/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Projects/new_website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Projects/new_website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Projects/new_website/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import data from'./ProductInstallPage.json';import ProductInstallNavbar from'./ProductInstallNavbar';var StudiomuxMacInstallPage=/*#__PURE__*/function(_React$Component){_inherits(StudiomuxMacInstallPage,_React$Component);function StudiomuxMacInstallPage(props){var _this;_classCallCheck(this,StudiomuxMacInstallPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(StudiomuxMacInstallPage).call(this,props));_this.state={page_id:props.page_id,submenu_id:props.submenu_id,item_number:props.item_number,data:data};_this.vector={};return _this;}_createClass(StudiomuxMacInstallPage,[{key:\"render\",value:function render(){this.vector[0]=React.createElement(\"div\",null,React.createElement(\"div\",{class:\"callout text-center\"},React.createElement(\"h4\",null,\"Download and install the app and server and make sure to deinstall previous versions of midimux and audiomux.\"),React.createElement(\"a\",{href:\"https://zerodebug.com/server/studiomux_310b.pkg\"},React.createElement(\"img\",{src:\"https://zerodebug.com/images/pkg.png\",alt:\"pkg-icon\",class:\"app-icon\",height:\"30\"}),\" touchAble428.pkg\"),React.createElement(\"div\",{class:\"call\"},React.createElement(\"h4\",null,\"Once the server is installed and the mac has been restarted, a new icon will appear in the system tray. The context menu displays the currently available and connected iOS devices and the status of the audio device. On Mac OSX 10.8+ you can load or unload the audio device by clicking load/unload audio device. Each status change requires an admin password entry. You may quit the server by clicking quit and restart it \\u2013 whenever you need it \\u2013 from the Applications folder.\"))));this.vector[1]=React.createElement(\"div\",null,React.createElement(\"div\",{class:\"callout text-left\"},React.createElement(\"center\",null,React.createElement(\"h3\",null,\"Connect iOS device and mac via usb cable\"))));return React.createElement(\"div\",null,this.vector[this.state.item_number]);}}]);return StudiomuxMacInstallPage;}(React.Component);export{StudiomuxMacInstallPage as default};","map":{"version":3,"sources":["/Projects/new_website/src/components/Installer/StudiomuxMacInstallPage.js"],"names":["React","data","ProductInstallNavbar","StudiomuxMacInstallPage","props","state","page_id","submenu_id","item_number","vector","Component"],"mappings":"shBACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,2BAAjB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,C,GAEqBC,CAAAA,uB,6FAEjB,iCAAYC,KAAZ,CAAmB,yDACf,yFAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CAAEC,OAAO,CAAEF,KAAK,CAACE,OAAjB,CAA0BC,UAAU,CAAEH,KAAK,CAACG,UAA5C,CAAwDC,WAAW,CAAEJ,KAAK,CAACI,WAA3E,CAAwFP,IAAI,CAAEA,IAA9F,CAAb,CACA,MAAKQ,MAAL,CAAc,EAAd,CAHe,aAIlB,C,2EAGQ,CAGL,KAAKA,MAAL,CAAY,CAAZ,EACI,+BACA,2BAAK,KAAK,CAAC,qBAAX,EACI,8IADJ,CAEI,yBAAG,IAAI,CAAC,iDAAR,EACI,2BAAK,GAAG,CAAC,sCAAT,CAAgD,GAAG,CAAC,UAApD,CAA+D,KAAK,CAAC,UAArE,CAAgF,MAAM,CAAC,IAAvF,EADJ,qBAFJ,CAII,2BAAK,KAAK,CAAC,MAAX,EACA,qgBADA,CAJJ,CADA,CADJ,CAiBA,KAAKA,MAAL,CAAY,CAAZ,EACI,+BACA,2BAAK,KAAK,CAAC,mBAAX,EACI,kCACI,yEADJ,CADJ,CADA,CADJ,CAUA,MACI,gCACK,KAAKA,MAAL,CAAY,KAAKJ,KAAL,CAAWG,WAAvB,CADL,CADJ,CAKH,C,qCA5CgDR,KAAK,CAACU,S,SAAtCP,uB","sourcesContent":["\nimport React from 'react'\nimport data from './ProductInstallPage.json';\nimport ProductInstallNavbar from './ProductInstallNavbar';\n\nexport default class StudiomuxMacInstallPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { page_id: props.page_id, submenu_id: props.submenu_id, item_number: props.item_number, data: data };\n        this.vector = {};\n    }\n\n\n    render() {\n\n\n        this.vector[0] = (\n            <div>\n            <div class=\"callout text-center\">\n                <h4>Download and install the app and server and make sure to deinstall previous versions of midimux and audiomux.</h4>\n                <a href=\"https://zerodebug.com/server/studiomux_310b.pkg\">\n                    <img src=\"https://zerodebug.com/images/pkg.png\" alt=\"pkg-icon\" class=\"app-icon\" height=\"30\"></img> touchAble428.pkg</a>\n                <div class=\"call\">\n                <h4>Once the server is installed and the mac has been restarted, a new icon will appear in the system tray.\nThe context menu displays the currently available and connected iOS devices and the status of the audio device.\nOn Mac OSX 10.8+ you can load or unload the audio device by clicking load/unload audio device.\nEach status change requires an admin password entry.\nYou may quit the server by clicking quit and restart it – whenever you need it – from the Applications folder.</h4>\n                </div>\n            </div>\n        </div>\n        )\n\n        this.vector[1] = (\n            <div>\n            <div class=\"callout text-left\">\n                <center>\n                    <h3>Connect iOS device and mac via usb cable</h3>\n                </center>\n            </div>\n        </div>\n        )\n\n        return (\n            <div>\n                {this.vector[this.state.item_number]}\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}